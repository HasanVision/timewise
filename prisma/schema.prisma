generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model ResetPasswordToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id     String @id
  userId String @unique
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model User {
  id                    String                 @id @default(cuid())
  firstname             String
  lastname              String
  email                 String                 @unique
  emailVerified         DateTime?
  password              String?
  isTwoFactorEnabled    Boolean                @default(false)
  image                 String?
  Account               Account[]
  TwoFactorConfirmation TwoFactorConfirmation?
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model MagicLinkToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model IPInfo {
  id                   String   @id @default(cuid())
  ip                   String
  network              String?
  version              String?
  city                 String
  city_code            String?
  region               String
  region_code          String?
  country              String
  country_name         String
  country_code         String
  country_code_iso3    String?
  country_capital      String?
  country_tld          String?
  continent_code       String?
  in_eu                Boolean
  postal               String?
  latitude             Float
  longitude            Float
  timezone             String
  utc_offset           String?
  country_calling_code String?
  currency             String?
  currency_name        String?
  languages            String?
  country_area         Float?
  country_population   Int?
  asn                  String?
  org                  String?
  createdAt            DateTime @default(now())
}
